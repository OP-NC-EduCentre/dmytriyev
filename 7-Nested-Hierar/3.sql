-- 1. Виберіть таблицю вашої БД, до якої потрібно додати нову колонку, яка стане FK-
-- колонкою для PK-колонки цієї таблиці та буде використана для зберігання ієрархії.
-- Використовується команда ALTER TABLE таблиця ADD колонка тип_даних;
-- Заповніть дані для створеної колонки, виконавши серію команд UPDATE.

-- Додамо атрибут TRUSTEE, який міститиме інформацію про довірену особу.

ALTER TABLE OWNER
    ADD TRUSTEE NUMBER(9);

ALTER TABLE OWNER 
    ADD CONSTRAINT OWNER_TRUSTEE_FK
        FOREIGN KEY (TRUSTEE) REFERENCES OWNER (ID);

UPDATE OWNER SET TRUSTEE = 1
WHERE ID = 2;

UPDATE OWNER SET TRUSTEE = 24
WHERE ID = 23;

SELECT * FROM OWNER;

-- ID|FIRST_NAME|LAST_NAME|PATRONYMIC |BIRTH_DATE|PASPORT  |ADDRESS             |PHONE        |TRUSTEE|
-- --+----------+---------+-----------+----------+---------+--------------------+-------------+-------+
--  1|Петров    |Петро    |Петрович   |2000-01-01|КК112233 |вул. Нижня, 50      |+380123456789|       |
--  2|Іванов    |Іван     |           |1992-08-03|001234567|вул. Верхня, 2А     |+380987654321|      1|
-- 23|Георгієв  |Георгій  |Георгійович|1971-12-12|КЕ12345  |вул. Лівобережна, 11|+380991234567|     24|
-- 24|Петренко  |Григорій |Іванович   |1976-12-10|КЕ44444  |вул. Лівобережна, 12|+38099432112 |       |




-- 2. Використовуючи створену колонку, отримайте дані з таблиці через ієрархічний зв'язок
-- типу «зверху-вниз».

SELECT 
    ID, 
    FIRST_NAME, 
    LAST_NAME, 
    TRUSTEE, 
    LEVEL
FROM OWNER
START WITH TRUSTEE IS NULL
CONNECT BY PRIOR ID = TRUSTEE
ORDER BY LEVEL;

-- ID|FIRST_NAME|LAST_NAME|TRUSTEE|LEVEL|
-- --+----------+---------+-------+-----+
-- 24|Петренко  |Григорій |       |    1|
--  1|Петров    |Петро    |       |    1|
-- 23|Георгієв  |Георгій  |     24|    2|
--  2|Іванов    |Іван     |      1|    2|




-- 3. Згенеруйте унікальну послідовність чисел, використовуючи рекурсивний запит, в
-- діапазоні від 1 до 100. На основі отриманого результату створіть запит, що виводить на екран
-- список ще не внесених значень однієї з PK-колонок однієї з таблиць БД за прикладом на рисунку
-- 11.

SELECT N
FROM (WITH NUMBERS(N) AS
               (SELECT 1 AS N
                FROM DUAL
                UNION ALL
                SELECT N + 1
                FROM NUMBERS
                WHERE N < 100)
      SELECT N
      FROM NUMBERS)
WHERE NOT EXISTS (
                    SELECT ID
                    FROM OWNER
                    WHERE ID = N
                 );

-- N  |
-- ---+
--   3|
--   4|
--   5|
--   6|
--   7|
--   8|
--   9|
--  10|
--  11|
--  12|
--  13|
--  14|
--  15|
--  16|
--  17|
--  18|
--  19|
--  20|
--  21|
--  22|
--  25|
--  26|
--  27|
--  28|
--  29|
--  30|
--  31|
--  32|
--  33|
--  34|
--  35|
--  36|
--  37|
--  38|
--  39|
--  40|
--  41|
--  42|
--  43|
--  44|
--  45|
--  46|
--  47|
--  48|
--  49|
--  50|
--  51|
--  52|
--  53|
--  54|
--  55|
--  56|
--  57|
--  58|
--  59|
--  60|
--  61|
--  62|
--  63|
--  64|
--  65|
--  66|
--  67|
--  68|
--  69|
--  70|
--  71|
--  72|
--  73|
--  74|
--  75|
--  76|
--  77|
--  78|
--  79|
--  80|
--  81|
--  82|
--  83|
--  84|
--  85|
--  86|
--  87|
--  88|
--  89|
--  90|
--  91|
--  92|
--  93|
--  94|
--  95|
--  96|
--  97|
--  98|
--  99|
-- 100|